// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package com.google.api.generator.gapic.composer;

import static junit.framework.Assert.assertEquals;

import com.google.api.generator.engine.writer.JavaWriterVisitor;
import com.google.api.generator.gapic.model.GapicClass;
import com.google.api.generator.gapic.model.Message;
import com.google.api.generator.gapic.model.ResourceName;
import com.google.api.generator.gapic.model.Service;
import com.google.api.generator.gapic.protoparser.Parser;
import com.google.protobuf.Descriptors.FileDescriptor;
import com.google.protobuf.Descriptors.ServiceDescriptor;
import com.google.showcase.v1beta1.EchoOuterClass;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.junit.Before;
import org.junit.Test;

public class GrpcServiceStubClassComposerTest {
  private ServiceDescriptor echoService;
  private FileDescriptor echoFileDescriptor;

  @Before
  public void setUp() {
    echoFileDescriptor = EchoOuterClass.getDescriptor();
    echoService = echoFileDescriptor.getServices().get(0);
    assertEquals(echoService.getName(), "Echo");
  }

  @Test
  public void generateServiceClasses() {
    Map<String, Message> messageTypes = Parser.parseMessages(echoFileDescriptor);
    Map<String, ResourceName> resourceNames = Parser.parseResourceNames(echoFileDescriptor);
    Set<ResourceName> outputResourceNames = new HashSet<>();
    List<Service> services =
        Parser.parseService(echoFileDescriptor, messageTypes, resourceNames, outputResourceNames);
    Service echoProtoService = services.get(0);
    GapicClass clazz =
        GrpcServiceStubClassComposer.instance().generate(echoProtoService, messageTypes);

    JavaWriterVisitor visitor = new JavaWriterVisitor();
    clazz.classDefinition().accept(visitor);
    assertEquals(EXPECTED_CLASS_STRING, visitor.write());
  }

  // TODO(miraleung): Update this when a file-diffing test mechanism is in place.
  private static final String EXPECTED_CLASS_STRING =
      "package com.google.showcase.v1beta1.stub;\n"
          + "\n"
          + "import static com.google.showcase.v1beta1.EchoClient.PagedExpandPagedResponse;\n"
          + "\n"
          + "import com.google.api.gax.core.BackgroundResource;\n"
          + "import com.google.api.gax.core.BackgroundResourceAggregation;\n"
          + "import com.google.api.gax.grpc.GrpcCallSettings;\n"
          + "import com.google.api.gax.grpc.GrpcStubCallableFactory;\n"
          + "import com.google.api.gax.rpc.BidiStreamingCallable;\n"
          + "import com.google.api.gax.rpc.ClientContext;\n"
          + "import com.google.api.gax.rpc.ClientStreamingCallable;\n"
          + "import com.google.api.gax.rpc.OperationCallable;\n"
          + "import com.google.api.gax.rpc.ServerStreamingCallable;\n"
          + "import com.google.api.gax.rpc.UnaryCallable;\n"
          + "import com.google.longrunning.Operation;\n"
          + "import com.google.longrunning.stub.GrpcOperationsStub;\n"
          + "import com.google.showcase.v1beta1.BlockRequest;\n"
          + "import com.google.showcase.v1beta1.BlockResponse;\n"
          + "import com.google.showcase.v1beta1.EchoRequest;\n"
          + "import com.google.showcase.v1beta1.EchoResponse;\n"
          + "import com.google.showcase.v1beta1.ExpandRequest;\n"
          + "import com.google.showcase.v1beta1.PagedExpandRequest;\n"
          + "import com.google.showcase.v1beta1.PagedExpandResponse;\n"
          + "import com.google.showcase.v1beta1.WaitMetadata;\n"
          + "import com.google.showcase.v1beta1.WaitRequest;\n"
          + "import com.google.showcase.v1beta1.WaitResponse;\n"
          + "import io.grpc.MethodDescriptor;\n"
          + "import io.grpc.protobuf.ProtoUtils;\n"
          + "import java.io.IOException;\n"
          + "import java.util.concurrent.TimeUnit;\n"
          + "import javax.annotation.Generated;\n"
          + "\n"
          + "@Generated(\"by gapic-generator-java\")\n"
          + "public class GrpcEchoStub extends EchoStub {\n"
          + "  private static final MethodDescriptor<EchoRequest, EchoResponse>"
          + " echoMethodDescriptor =\n"
          + "      MethodDescriptor.<EchoRequest, EchoResponse>newBuilder()\n"
          + "          .setType(MethodDescriptor.MethodType.UNARY)\n"
          + "          .setFullMethodName(\"google.showcase.v1beta1.Echo/Echo\")\n"
          + "         "
          + " .setRequestMarshaller(ProtoUtils.marshaller(EchoRequest.getDefaultInstance()))\n"
          + "         "
          + " .setResponseMarshaller(ProtoUtils.marshaller(EchoResponse.getDefaultInstance()))\n"
          + "          .build();\n"
          + "  private static final MethodDescriptor<ExpandRequest, EchoResponse>"
          + " expandMethodDescriptor =\n"
          + "      MethodDescriptor.<ExpandRequest, EchoResponse>newBuilder()\n"
          + "          .setType(MethodDescriptor.MethodType.SERVER_STREAMING)\n"
          + "          .setFullMethodName(\"google.showcase.v1beta1.Echo/Expand\")\n"
          + "         "
          + " .setRequestMarshaller(ProtoUtils.marshaller(ExpandRequest.getDefaultInstance()))\n"
          + "         "
          + " .setResponseMarshaller(ProtoUtils.marshaller(EchoResponse.getDefaultInstance()))\n"
          + "          .build();\n"
          + "  private static final MethodDescriptor<EchoRequest, EchoResponse>"
          + " collectMethodDescriptor =\n"
          + "      MethodDescriptor.<EchoRequest, EchoResponse>newBuilder()\n"
          + "          .setType(MethodDescriptor.MethodType.CLIENT_STREAMING)\n"
          + "          .setFullMethodName(\"google.showcase.v1beta1.Echo/Collect\")\n"
          + "         "
          + " .setRequestMarshaller(ProtoUtils.marshaller(EchoRequest.getDefaultInstance()))\n"
          + "         "
          + " .setResponseMarshaller(ProtoUtils.marshaller(EchoResponse.getDefaultInstance()))\n"
          + "          .build();\n"
          + "  private static final MethodDescriptor<EchoRequest, EchoResponse>"
          + " chatMethodDescriptor =\n"
          + "      MethodDescriptor.<EchoRequest, EchoResponse>newBuilder()\n"
          + "          .setType(MethodDescriptor.MethodType.BIDI_STREAMING)\n"
          + "          .setFullMethodName(\"google.showcase.v1beta1.Echo/Chat\")\n"
          + "         "
          + " .setRequestMarshaller(ProtoUtils.marshaller(EchoRequest.getDefaultInstance()))\n"
          + "         "
          + " .setResponseMarshaller(ProtoUtils.marshaller(EchoResponse.getDefaultInstance()))\n"
          + "          .build();\n"
          + "  private static final MethodDescriptor<EchoRequest, EchoResponse>"
          + " chatAgainMethodDescriptor =\n"
          + "      MethodDescriptor.<EchoRequest, EchoResponse>newBuilder()\n"
          + "          .setType(MethodDescriptor.MethodType.BIDI_STREAMING)\n"
          + "          .setFullMethodName(\"google.showcase.v1beta1.Echo/ChatAgain\")\n"
          + "         "
          + " .setRequestMarshaller(ProtoUtils.marshaller(EchoRequest.getDefaultInstance()))\n"
          + "         "
          + " .setResponseMarshaller(ProtoUtils.marshaller(EchoResponse.getDefaultInstance()))\n"
          + "          .build();\n"
          + "  private static final MethodDescriptor<PagedExpandRequest, PagedExpandResponse>\n"
          + "      pagedExpandMethodDescriptor =\n"
          + "          MethodDescriptor.<PagedExpandRequest, PagedExpandResponse>newBuilder()\n"
          + "              .setType(MethodDescriptor.MethodType.UNARY)\n"
          + "              .setFullMethodName(\"google.showcase.v1beta1.Echo/PagedExpand\")\n"
          + "             "
          + " .setRequestMarshaller(ProtoUtils.marshaller(PagedExpandRequest.getDefaultInstance()))\n"
          + "              .setResponseMarshaller(\n"
          + "                  ProtoUtils.marshaller(PagedExpandResponse.getDefaultInstance()))\n"
          + "              .build();\n"
          + "  private static final MethodDescriptor<WaitRequest, Operation> waitMethodDescriptor"
          + " =\n"
          + "      MethodDescriptor.<WaitRequest, Operation>newBuilder()\n"
          + "          .setType(MethodDescriptor.MethodType.UNARY)\n"
          + "          .setFullMethodName(\"google.showcase.v1beta1.Echo/Wait\")\n"
          + "         "
          + " .setRequestMarshaller(ProtoUtils.marshaller(WaitRequest.getDefaultInstance()))\n"
          + "         "
          + " .setResponseMarshaller(ProtoUtils.marshaller(Operation.getDefaultInstance()))\n"
          + "          .build();\n"
          + "  private static final MethodDescriptor<BlockRequest, BlockResponse>"
          + " blockMethodDescriptor =\n"
          + "      MethodDescriptor.<BlockRequest, BlockResponse>newBuilder()\n"
          + "          .setType(MethodDescriptor.MethodType.UNARY)\n"
          + "          .setFullMethodName(\"google.showcase.v1beta1.Echo/Block\")\n"
          + "         "
          + " .setRequestMarshaller(ProtoUtils.marshaller(BlockRequest.getDefaultInstance()))\n"
          + "         "
          + " .setResponseMarshaller(ProtoUtils.marshaller(BlockResponse.getDefaultInstance()))\n"
          + "          .build();\n"
          + "  private final UnaryCallable<EchoRequest, EchoResponse> echoCallable;\n"
          + "  private final ServerStreamingCallable<ExpandRequest, EchoResponse>"
          + " expandCallable;\n"
          + "  private final ClientStreamingCallable<EchoRequest, EchoResponse> collectCallable;\n"
          + "  private final BidiStreamingCallable<EchoRequest, EchoResponse> chatCallable;\n"
          + "  private final BidiStreamingCallable<EchoRequest, EchoResponse> chatAgainCallable;\n"
          + "  private final UnaryCallable<PagedExpandRequest, PagedExpandResponse>"
          + " pagedExpandCallable;\n"
          + "  private final UnaryCallable<PagedExpandRequest, PagedExpandPagedResponse>\n"
          + "      pagedExpandPagedCallable;\n"
          + "  private final UnaryCallable<WaitRequest, Operation> waitCallable;\n"
          + "  private final OperationCallable<WaitRequest, WaitResponse, WaitMetadata>"
          + " waitOperationCallable;\n"
          + "  private final UnaryCallable<BlockRequest, BlockResponse> blockCallable;\n"
          + "  private final BackgroundResource backgroundResources;\n"
          + "  private final GrpcOperationsStub operationsStub;\n"
          + "  private final GrpcStubCallableFactory callableFactory;\n"
          + "\n"
          + "  public static final GrpcEchoStub create(EchoStubSettings settings) throws"
          + " IOException {\n"
          + "    return new GrpcEchoStub(settings, ClientContext.create(settings));\n"
          + "  }\n"
          + "\n"
          + "  public static final GrpcEchoStub create(ClientContext clientContext) throws"
          + " IOException {\n"
          + "    return new GrpcEchoStub(EchoStubSettings.newBuilder().build(), clientContext);\n"
          + "  }\n"
          + "\n"
          + "  public static final GrpcEchoStub create(\n"
          + "      ClientContext clientContext, GrpcStubCallableFactory callableFactory) throws"
          + " IOException {\n"
          + "    return new GrpcEchoStub(EchoStubSettings.newBuilder().build(), clientContext,"
          + " callableFactory);\n"
          + "  }\n"
          + "\n"
          + "  protected GrpcEchoStub(EchoStubSettings settings, ClientContext clientContext)\n"
          + "      throws IOException {\n"
          + "    this(settings, clientContext, new GrpcEchoCallableFactory());\n"
          + "  }\n"
          + "\n"
          + "  protected GrpcEchoStub(\n"
          + "      EchoStubSettings settings,\n"
          + "      ClientContext clientContext,\n"
          + "      GrpcStubCallableFactory callableFactory)\n"
          + "      throws IOException {\n"
          + "    this.callableFactory = callableFactory;\n"
          + "    this.operationsStub = GrpcOperationsStub.create(clientContext,"
          + " callableFactory);\n"
          + "    GrpcCallSettings<EchoRequest, EchoResponse> echoTransportSettings =\n"
          + "        GrpcCallSettings.<EchoRequest, EchoResponse>newBuilder()\n"
          + "            .setMethodDescriptor(echoMethodDescriptor)\n"
          + "            .build();\n"
          + "    GrpcCallSettings<ExpandRequest, EchoResponse> expandTransportSettings =\n"
          + "        GrpcCallSettings.<ExpandRequest, EchoResponse>newBuilder()\n"
          + "            .setMethodDescriptor(expandMethodDescriptor)\n"
          + "            .build();\n"
          + "    GrpcCallSettings<EchoRequest, EchoResponse> collectTransportSettings =\n"
          + "        GrpcCallSettings.<EchoRequest, EchoResponse>newBuilder()\n"
          + "            .setMethodDescriptor(collectMethodDescriptor)\n"
          + "            .build();\n"
          + "    GrpcCallSettings<EchoRequest, EchoResponse> chatTransportSettings =\n"
          + "        GrpcCallSettings.<EchoRequest, EchoResponse>newBuilder()\n"
          + "            .setMethodDescriptor(chatMethodDescriptor)\n"
          + "            .build();\n"
          + "    GrpcCallSettings<EchoRequest, EchoResponse> chatAgainTransportSettings =\n"
          + "        GrpcCallSettings.<EchoRequest, EchoResponse>newBuilder()\n"
          + "            .setMethodDescriptor(chatAgainMethodDescriptor)\n"
          + "            .build();\n"
          + "    GrpcCallSettings<PagedExpandRequest, PagedExpandResponse>"
          + " pagedExpandTransportSettings =\n"
          + "        GrpcCallSettings.<PagedExpandRequest, PagedExpandResponse>newBuilder()\n"
          + "            .setMethodDescriptor(pagedExpandMethodDescriptor)\n"
          + "            .build();\n"
          + "    GrpcCallSettings<WaitRequest, Operation> waitTransportSettings =\n"
          + "        GrpcCallSettings.<WaitRequest, Operation>newBuilder()\n"
          + "            .setMethodDescriptor(waitMethodDescriptor)\n"
          + "            .build();\n"
          + "    GrpcCallSettings<BlockRequest, BlockResponse> blockTransportSettings =\n"
          + "        GrpcCallSettings.<BlockRequest, BlockResponse>newBuilder()\n"
          + "            .setMethodDescriptor(blockMethodDescriptor)\n"
          + "            .build();\n"
          + "    this.echoCallable =\n"
          + "        callableFactory.createUnaryCallable(\n"
          + "            echoTransportSettings, settings.echoSettings(), clientContext);\n"
          + "    this.expandCallable =\n"
          + "        callableFactory.createServerStreamingCallable(\n"
          + "            expandTransportSettings, settings.expandSettings(), clientContext);\n"
          + "    this.collectCallable =\n"
          + "        callableFactory.createClientStreamingCallable(\n"
          + "            collectTransportSettings, settings.collectSettings(), clientContext);\n"
          + "    this.chatCallable =\n"
          + "        callableFactory.createBidiStreamingCallable(\n"
          + "            chatTransportSettings, settings.chatSettings(), clientContext);\n"
          + "    this.chatAgainCallable =\n"
          + "        callableFactory.createBidiStreamingCallable(\n"
          + "            chatAgainTransportSettings, settings.chatAgainSettings(),"
          + " clientContext);\n"
          + "    this.pagedExpandCallable =\n"
          + "        callableFactory.createUnaryCallable(\n"
          + "            pagedExpandTransportSettings, settings.pagedExpandSettings(),"
          + " clientContext);\n"
          + "    this.pagedExpandPagedCallable =\n"
          + "        callableFactory.createUnaryCallable(\n"
          + "            pagedExpandTransportSettings, settings.pagedExpandSettings(),"
          + " clientContext);\n"
          + "    this.waitCallable =\n"
          + "        callableFactory.createUnaryCallable(\n"
          + "            waitTransportSettings, settings.waitSettings(), clientContext);\n"
          + "    this.waitOperationCallable =\n"
          + "        callableFactory.createOperationCallable(\n"
          + "            waitTransportSettings, settings.waitOperationSettings(), clientContext,"
          + " operationsStub);\n"
          + "    this.blockCallable =\n"
          + "        callableFactory.createUnaryCallable(\n"
          + "            blockTransportSettings, settings.blockSettings(), clientContext);\n"
          + "    this.backgroundResources =\n"
          + "        new BackgroundResourceAggregation(clientContext.getBackgroundResources());\n"
          + "  }\n"
          + "\n"
          + "  public GrpcOperationsStub getOperationsStub() {\n"
          + "    return operationsStub;\n"
          + "  }\n"
          + "\n"
          + "  public UnaryCallable<EchoRequest, EchoResponse> echoCallable() {\n"
          + "    return echoCallable;\n"
          + "  }\n"
          + "\n"
          + "  public ServerStreamingCallable<ExpandRequest, EchoResponse> expandCallable() {\n"
          + "    return expandCallable;\n"
          + "  }\n"
          + "\n"
          + "  public ClientStreamingCallable<EchoRequest, EchoResponse> collectCallable() {\n"
          + "    return collectCallable;\n"
          + "  }\n"
          + "\n"
          + "  public BidiStreamingCallable<EchoRequest, EchoResponse> chatCallable() {\n"
          + "    return chatCallable;\n"
          + "  }\n"
          + "\n"
          + "  public BidiStreamingCallable<EchoRequest, EchoResponse> chatAgainCallable() {\n"
          + "    return chatAgainCallable;\n"
          + "  }\n"
          + "\n"
          + "  public UnaryCallable<PagedExpandRequest, PagedExpandResponse> pagedExpandCallable()"
          + " {\n"
          + "    return pagedExpandCallable;\n"
          + "  }\n"
          + "\n"
          + "  public UnaryCallable<PagedExpandRequest, PagedExpandPagedResponse>"
          + " pagedExpandPagedCallable() {\n"
          + "    return pagedExpandPagedCallable;\n"
          + "  }\n"
          + "\n"
          + "  public UnaryCallable<WaitRequest, Operation> waitCallable() {\n"
          + "    return waitCallable;\n"
          + "  }\n"
          + "\n"
          + "  public OperationCallable<WaitRequest, WaitResponse, WaitMetadata>"
          + " waitOperationCallable() {\n"
          + "    return waitOperationCallable;\n"
          + "  }\n"
          + "\n"
          + "  public UnaryCallable<BlockRequest, BlockResponse> blockCallable() {\n"
          + "    return blockCallable;\n"
          + "  }\n"
          + "\n"
          + "  @Override\n"
          + "  public final void close() {\n"
          + "    shutdown();\n"
          + "  }\n"
          + "\n"
          + "  @Override\n"
          + "  public void shutdown() {\n"
          + "    backgroundResources.shutdown();\n"
          + "  }\n"
          + "\n"
          + "  @Override\n"
          + "  public boolean isShutdown() {\n"
          + "    return backgroundResources.isShutdown();\n"
          + "  }\n"
          + "\n"
          + "  @Override\n"
          + "  public boolean isTerminated() {\n"
          + "    return backgroundResources.isTerminated();\n"
          + "  }\n"
          + "\n"
          + "  @Override\n"
          + "  public void shutdownNow() {\n"
          + "    backgroundResources.shutdownNow();\n"
          + "  }\n"
          + "\n"
          + "  @Override\n"
          + "  public boolean awaitTermination(long duration, TimeUnit unit) throws"
          + " InterruptedException {\n"
          + "    return backgroundResources.awaitTermination(duration, unit);\n"
          + "  }\n"
          + "}\n";
}
